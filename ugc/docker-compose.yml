version: '3.5'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports: [54378:8000]
    environment:
      - KAFKA_SERVER=kafka-0:9092
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    networks:
      - etl_network
    profiles: [ugc]

  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports: [8080:8080]
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    networks:
      - etl_network
    profiles: [ugc, ugc-dev]

  kafka-0:
    image: bitnami/kafka:3.4
    ports: [9094:9094]
    volumes: [kafka_0_data:/bitnami/kafka]
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    networks:
      - etl_network
    profiles: [ugc, ugc-dev]

  kafka-1:
    image: bitnami/kafka:3.4
    ports: [9095:9095]
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://127.0.0.1:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes: [kafka_1_data:/bitnami/kafka]
    networks:
      - etl_network
    profiles: [ugc, ugc-dev]

  kafka-2:
    image: bitnami/kafka:3.4
    ports: [9096:9096]
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://127.0.0.1:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes: [kafka_2_data:/bitnami/kafka]
    networks:
      - etl_network
    profiles: [ugc, ugc-dev]

  etl_service:
    build:
      context: ./etl_service
    environment:
      - KAFKA_SERVER=kafka-0:9092
      - CLICKHOUSE_SERVER=clickhouse
    depends_on:
      - kafka-0
      - clickhouse
    networks:
      - etl_network
    profiles: [etl]

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - etl_network
    profiles: [ugc, ugc-dev]

  clickhouse:
    image: clickhouse/clickhouse-server:23
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - etl_network
    profiles: [etl]

networks:
  etl_network:
    driver: bridge

volumes:
  kafka_0_data:
    name: ya.practicum-kafka-0
  kafka_1_data:
    name: ya.practicum-kafka-1
  kafka_2_data:
    name: ya.practicum-kafka-2
