services:
  api-nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./api/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    ports: [ 54378:80 ]
    profiles: [ ugc ]

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      - KAFKA_SERVER=kafka-0:9092
    env_file:
      - .env
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    profiles: [ ugc ]


  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports: [ 8080:8080 ]
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    profiles: [ ugc, ugc-dev ]

  kafka-0:
    image: bitnami/kafka:3.4
    ports: [ 9094:9094 ]
    volumes: [ kafka_0_data:/bitnami/kafka ]
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    profiles: [ ugc, ugc-dev ]

  kafka-1:
    image: bitnami/kafka:3.4
    ports: [ 9095:9095 ]
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://127.0.0.1:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes: [ kafka_1_data:/bitnami/kafka ]
    profiles: [ ugc, ugc-dev ]

  kafka-2:
    image: bitnami/kafka:3.4
    ports: [ 9096:9096 ]
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://127.0.0.1:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes: [ kafka_2_data:/bitnami/kafka ]
    profiles: [ ugc, ugc-dev ]

  etl_service:
    build:
      context: ./etl_service
    environment:
      - KAFKA_SERVER=kafka-0:9092
      - CLICKHOUSE_SERVER=clickhouse
    depends_on:
      - kafka-0
      - clickhouse
    profiles: [ etl ]

  clickhouse:
    image: clickhouse/clickhouse-server:23
    ports:
      - "8123:8123"
      - "9000:9000"
    profiles: [ etl ]

  filebeat:
    build:
      context: ./filebeat_ugc_api
    volumes:
      - ./api/src/ugc_logs.json:/usr/share/filebeat/logs/ugc_logs.json:ro
    depends_on:
      - api
    profiles: [ elk ]


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME=admin
      - ELASTIC_PASSWORD=admin
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    profiles: [ elk ]

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    volumes:
      - ./elk/deploy/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - XPACK_MONITORING_ENABLED = "false"
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
      - ES_HOST=elasticsearch:9200
    ports:
      - 5044:5044
    depends_on:
      - elasticsearch
    profiles: [ elk ]

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    profiles: [ elk ]

volumes:
  kafka_0_data:
    name: ya.practicum-kafka-0
  kafka_1_data:
    name: ya.practicum-kafka-1
  kafka_2_data:
    name: ya.practicum-kafka-2
  esdata:
    name: ya.practicum-esdata
