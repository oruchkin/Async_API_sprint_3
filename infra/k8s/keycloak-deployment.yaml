apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: keycloak-app
    spec:
      containers:
        - name: keycloak-container
          image: k8s-keycloak:latest
          # переменные окружения будем передавать в контейнер из секрета api-prod-env, который создадим далее
          envFrom:
            - secretRef:
                name: api-prod-env
          env:
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: api-prod-env
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              secretKeyRef:
                name: api-prod-env
                key: POSTGRES_PORT
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: api-prod-env
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: api-prod-env
                key: POSTGRES_PASSWORD
          - name: KC_DB_URL
            value: "jdbc:postgresql://$(POSTGRES_HOST):$(POSTGRES_PORT)/keycloak"
          - name: KEYCLOAK_ADMIN
            value: admin
          - name: KEYCLOAK_ADMIN_PASSWORD
            value: admin
          - name: KC_DB_USERNAME
            value: "$(POSTGRES_USER)"
          - name: KC_DB_PASSWORD
            value: "$(POSTGRES_PASSWORD)"
          
          # Так мы указываем minikube использовать ранее собранные
          # нами локально образы без попытки скачать их из реестра образов
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
  selector:
    matchLabels:
      app: keycloak-app