apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-nginx-conf
data:
  nginx.conf: |
    worker_processes  1;
    events {
      worker_connections  1024;
    }

    http {
      include       mime.types;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

      sendfile        on;
      tcp_nodelay     on;
      tcp_nopush      on;
      client_max_body_size 200m;

      # drop server details header
      server_tokens off;
      
      gzip on;
      gzip_comp_level 3;
      gzip_min_length 1000;
      gzip_types
            text/plain
            text/css
            application/json
            application/x-javascript
            text/xml
            text/javascript;

      proxy_redirect     off;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

      set_real_ip_from  192.168.1.0/24;
      real_ip_header    X-Forwarded-For;


      include conf.d/configs/*.conf;
    } 

  admin.conf: |
    server {
      listen       80 default_server;
      listen       [::]:80 default_server;
      server_name  _;

      root /data;

      location @backend {
          proxy_pass http://localhost:8000;
      }

      location = /admin {
          rewrite ^ /admin/ permanent;
      }

      location = /favicon.ico {
          access_log off;
          log_not_found off;
      }

      location ~* \.(?:jpg|jpeg|gif|png|ico|css|js)$ {
          log_not_found off;
          expires 90d;
      }

      location ~ ^/(api|admin|static)/ {
          proxy_cache my_cache;
          proxy_cache_valid 200 1h;
          proxy_cache_valid 404 10m;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
          proxy_cache_background_update on;
          proxy_cache_lock on;

          try_files $uri $uri/ @backend;
      }

      location / {
          return 404;
      }

      error_page   404              /404.html;
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   html;
      }
    } 