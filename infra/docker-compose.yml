version: '3.8'

services:
  postgres:
    image: postgres:13
    volumes:
      - dbstorage:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - .env

  admin:
    build:
      context: ./../admin
    volumes:
      - static_value:/opt/app/static_backend/
    ports:
      - "8000:8000"
    env_file:
      - .env


  admin-nginx:
    image: nginx:1.19.2
    depends_on:
      - admin
    restart: always
    volumes:
      - ./../admin/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./../admin/nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_value:/static_backend/
    ports:
      - "80:80"


  elasticsearch:
    image: elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - esstorage:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: always
    depends_on:
      - postgres


  etl:
    build:
      context: ./../etl
      dockerfile: Dockerfile
    environment:
      - .env
    depends_on:
      - postgres
      - elasticsearch
    restart: on-failure
    env_file:
      - .env


  redis:
    image: redis
    restart: always
    expose:
      - 6379
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redisstorage:/data


  fastapi:
    build:
      context: ./api
    expose:
      - 8001
    depends_on:
      - elasticsearch
      - redis
    env_file:
      - .env
    ports:
      - "8001:8000"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    volumes:
      - minio_storage:/data
    command: server --console-address ":9001" /data

volumes:
  dbstorage:
    name: admin-panel-db
    external: true
  static_value:
    name: admin-panel-static
    external: true
  esstorage:
    name: admin-panel-es
    external: true
  redisstorage:
    name: admin-panel-redis
    external: true
  minio_storage:
    name: admin-panel-s3
#    external: true


