version: '3'
services:

  prac_db_postgres:
    image: postgres:12
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - volume-prac-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always


  prac_db_init:
    build:
      context: postgres_init
      dockerfile: Dockerfile_db_init
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
    depends_on:
      - prac_db_postgres
    restart: no


  prac-backend:
    build:
      context: ../
      dockerfile: infra/app/Dockerfile

    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
    volumes:
#      - static_value:/opt/app/static_backend/
      # TOTHINK:
      - ./data/:/opt/app/static_backend/

    ports:
      - "8000:8000"
    depends_on:
      - prac_db_init


  prac-nginx:
    image: nginx:1.19.2
    depends_on:
      - prac-backend
    restart: always

    # запустить letsencrypt внутри нового контейнера
    # или у cloudflare запросить wildcard

    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - static_value:/static_backend/

      - ./data/:/opt/app/static_backend/

    ports:
      - "80:80"
      - "443:443"


  elasticsearch:
    image: elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
#      - :TOTHINK
#      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9200:9200"
    restart: always
    depends_on:
      - prac_db_postgres


  prac-etl:
    build:
      context: ../etl
      dockerfile: Dockerfile
    environment:
      - .env
    depends_on:
      - prac_db_postgres
      - prac-elasticsearch
      - prac-nginx
    restart: on-failure

volumes:
    static_value:
    volume-prac-postgres:
    elasticsearch-data:


